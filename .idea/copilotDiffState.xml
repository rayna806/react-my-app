<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="CopilotDiffPersistence">
    <option name="pendingDiffs">
      <map>
        <entry key="$PROJECT_DIR$/src/App.js">
          <value>
            <PendingDiffInfo>
              <option name="filePath" value="$PROJECT_DIR$/src/App.js" />
              <option name="originalContent" value="import {useEffect, useReducer} from &quot;react&quot;;&#10;import './App.css';&#10;import {initialState, todoReducer} from &quot;./reducers/todoReducer&quot;;&#10;import {TodoContext} from &quot;./context/TodoContext&quot;;&#10;import {NavLink, Outlet, RouterProvider} from &quot;react-router&quot;;&#10;import {routes} from &quot;./routes/Routes&quot;;&#10;import {TodoDetailPage} from &quot;./pages/TodoDetailPage&quot;;&#10;import axios from &quot;axios&quot;;&#10;&#10;const api = axios.create({&#10;    baseURL:&quot;https://68c7ac935d8d9f5147328860.mockapi.io/&quot;,&#10;    headers: {&quot;Content-Type&quot;:&quot;application/json&quot;},&#10;    timeout:10_000&#10;})&#10;&#10;function DefaultLayout() {&#10;    return &lt;div&gt;&#10;        &lt;header&gt;&#10;            &lt;nav&gt;&#10;                &lt;ul&gt;&#10;                    &lt;li&gt;&lt;NavLink to={&quot;/&quot;}&gt;Home&lt;/NavLink&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;NavLink to={&quot;/done&quot;}&gt;Done List&lt;/NavLink&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;NavLink to={&quot;/aboutus&quot;}&gt;About Us&lt;/NavLink&gt;&lt;/li&gt;&#10;                &lt;/ul&gt;&#10;            &lt;/nav&gt;&#10;        &lt;/header&gt;&#10;        &lt;main&gt;&#10;            &lt;Outlet /&gt;&#10;        &lt;/main&gt;&#10;    &lt;/div&gt;&#10;}&#10;&#10;function App() {&#10;    // the Hooks API manage component data state&#10;    const [state, dispatch] = useReducer(todoReducer, initialState);&#10;    useEffect(()=&gt; {&#10;        api.get(&quot;/todos&quot;)&#10;            .then(response =&gt; response.data)&#10;            .then(todos =&gt; dispatch({type:&quot;LOAD_TODOS&quot;, payload: todos}))&#10;    },[])&#10;&#10;&#10;    return (&#10;        &lt;div className=&quot;App&quot;&gt;&#10;            &lt;TodoContext.Provider value={{state, dispatch}}&gt;&#10;                &lt;RouterProvider router={routes} /&gt;&#10;            &lt;/TodoContext.Provider&gt;&#10;        &lt;/div&gt;&#10;    );&#10;}&#10;&#10;&#10;export default App;" />
              <option name="updatedContent" value="import {useEffect, useReducer} from &quot;react&quot;;&#10;import './App.css';&#10;import {initialState, todoReducer} from &quot;./reducers/todoReducer&quot;;&#10;import {TodoContext} from &quot;./context/TodoContext&quot;;&#10;import {NavLink, Outlet, RouterProvider} from &quot;react-router&quot;;&#10;import {routes} from &quot;./routes/Routes&quot;;&#10;import {TodoDetailPage} from &quot;./pages/TodoDetailPage&quot;;&#10;import axios from &quot;axios&quot;;&#10;&#10;const api = axios.create({&#10;    baseURL:&quot;https://68c7ac935d8d9f5147328860.mockapi.io/&quot;,&#10;    headers: {&quot;Content-Type&quot;:&quot;application/json&quot;},&#10;    timeout:10_000&#10;})&#10;&#10;function DefaultLayout() {&#10;    return &lt;div&gt;&#10;        &lt;header&gt;&#10;            &lt;nav&gt;&#10;                &lt;ul&gt;&#10;                    &lt;li&gt;&lt;NavLink to={&quot;/&quot;}&gt;Home&lt;/NavLink&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;NavLink to={&quot;/done&quot;}&gt;Done List&lt;/NavLink&gt;&lt;/li&gt;&#10;                    &lt;li&gt;&lt;NavLink to={&quot;/aboutus&quot;}&gt;About Us&lt;/NavLink&gt;&lt;/li&gt;&#10;                &lt;/ul&gt;&#10;            &lt;/nav&gt;&#10;        &lt;/header&gt;&#10;        &lt;main&gt;&#10;            &lt;Outlet /&gt;&#10;        &lt;/main&gt;&#10;    &lt;/div&gt;&#10;}&#10;&#10;function App() {&#10;    // the Hooks API manage component data state&#10;    const [state, dispatch] = useReducer(todoReducer, initialState);&#10;    useEffect(()=&gt; {&#10;        api.get(&quot;/todos&quot;)&#10;            .then(response =&gt; response.data)&#10;            .then(todos =&gt; dispatch({type:&quot;LOAD_TODOS&quot;, payload: todos}))&#10;    },[])&#10;&#10;&#10;    return (&#10;        &lt;div className=&quot;App&quot;&gt;&#10;            &lt;TodoContext.Provider value={{state, dispatch}}&gt;&#10;                &lt;RouterProvider router={routes} /&gt;&#10;            &lt;/TodoContext.Provider&gt;&#10;        &lt;/div&gt;&#10;    );&#10;}&#10;&#10;&#10;export default App;" />
            </PendingDiffInfo>
          </value>
        </entry>
      </map>
    </option>
  </component>
</project>